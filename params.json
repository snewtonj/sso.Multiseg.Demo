{"name":"Sso.multiseg.demo","tagline":"SSO Multisegment Demo","body":"*This is sample code is unsupported: use at your own risk*\r\n\r\nMulti-Segment SSO Demonstration README\r\n======================================\r\n\r\nSome text is taken from [Engage SSO Integration](http://developers.janrain.com/documentation/federate/engage_sso_integration/ \"Engage SSO Integration\")\r\nSite Setup\r\n---------\r\nBy default the sites are sso1.janrain.com through sso4.janrain.com.\r\nAdjust the names in the html and javascript if those change. Running\r\nvirtual servers on a VM and using a local modified /etc/hosts file\r\nfor the particular setup. Each of the for sso? directories should\r\nbe a different virtual server. The virtual hosts don't need to be\r\nexternally visible, but they must be able to communicate with\r\nthe Engage server and CDN.\r\n\r\nConfiguration\r\n-------------\r\n\r\n### Per Site ###\r\nEach site has an index.html file where the per site settings exist\r\n    janrain.settings.segment = 'segmentName';\r\nSegment names are restricted to ASCII upper and lower case, numbers, and the underscore (_)\r\n    janrain.settings.supportedSegments = 'supportedSegmentOne-supportedSegmentTwo';\r\nSupported segment names are joined by the dash (-)\r\n\r\n\r\n```JavaScript\r\nJANRAIN.SSO.ENGAGE.check_login ({\r\n  sso_server: janrain.settings.ssoServer,\r\n  // each side much have an its own xd receiver\r\n  xd_receiver: 'http://sso4.janrain.com/rpx_xdcomm.html',\r\n  // each site should have a logout script that will close the session and release any resources in use\r\n  logout_uri: 'http://sso4.janrain.com/cgi-bin/logout',\r\n  // the usual token url\r\n  token_uri: '/cgi-bin/token',\r\n  // from the settings above\r\n  segment: janrain.settings.segment,\r\n  supported_segments: janrain.settings.supportedSegments\r\n});\r\n```\r\n\r\n### Global Settings ###\r\n\r\nThe global engage and sso setting existing in the engage-settings.js\r\nfile, and this by default is served out of sso1 but can be changed.\r\nDepending on how your engage application is configured, the contents\r\nof this file might be different, but it needs at a minimum the\r\nfollowing settings:\r\n\r\n```JavaScript\r\njanrain.settings.appId = 'your app id';\r\njanrain.settings.appUrl = 'https://yourapp.rpxnow.com';\r\njanrain.settings.ssoServer = 'https://yourapp.janrainsso.com';\r\n\r\nif (document.location.protocol === 'https:') {\r\n  e.src = 'https://rpxnow.com/js/lib/yourapp/engage.js';\r\n} else {\r\n  e.src = 'http://widget-cdn.rpxnow.com/js/lib/yourapp/engage.js';\r\n}\r\n```\r\n\r\nLibraries\r\n--------\r\nTwo utlity libraries are provided in the sso1/js directoy. The\r\ncookie.js file is required to handle cookies in the browser, while\r\nthe prettyprint.js file is used to display the logged-in user profile\r\nas a table.\r\n\r\nCGI Scripts\r\n----------\r\nIn the cgi-bin directory are example Ruby scripts for token, profile,\r\nand logout functions.  Recent ruby versions should include all the\r\nrequired libraries, but some might not have the json library.\r\n\r\nThe token script will query Engage for the logged-in user info, set\r\na couple of cookies, then redirect back to the calling page.\r\n\r\nThe profile script queries Engage and sets the cookies, but also\r\nreturns the user profile as a JSON object.\r\n\r\nThe logout script just deletes the cookies from the user's session.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}